from random import choice

def tratto_in_che_categoria(tratto):
    for categoria in categorie.keys():
        if tratto in categorie[categoria]:
            return categoria
            
def check_match(item1, list2):
    if item1 in list2:
        return True


categorie = {"aspetto":['redhead', 'dark glasses', 'long legs', 'well-dressed man', 'large shoulders', 'eastern dragon head', 'gorilla suit', 'chimp head', 'expressive', 'mech', 'sphynx analogue', 'exoskeletal', 'alien', 'hairy', 'neanderthal', 'catboy', 'jetpack wings', 'dinosaur skeleton', 'white-haired', 'naso aquilino', 'pregnant', 'no eyes', 'headless', 'blue-haired', 'neck tats', 'big lips', 'cool braids', 'naso greco', 'big lobes', 'band-aids', 'receding hairline', 'pink-haired', 'fire head', 'covered head to toe', 'cranio egiziano', 'big ears', 'person-in-a-vat mech', '2000s-lain-like hairstyle', 'spiky beard', 'wrinkles', 'vampire bat', 'ghost', 'skeleton', 'vocaloid', 'centaur cyborg', 'devil', 'long neck'],
            "bio":['piante grasse', 'ants', 'flowers', 'wasps', 'botanist/zoologist', 'mountains', 'birds', 'moths', 'bugs'],
            "lavoro":['deep sea researcher', 'DOP', 'market stand keeper - cheese', 'pharmacist', 'astronaut', 'lorry driver', 'lineman', 'gardener', 'battle master', 'corner fast food owner', 'materials engineer', 'mecenate', 'waste expert', 'laundromat owner', 'hypercompetent - painter', 'OS developer', 'mecenate', 'gardener', 'security', 'hobo clown', 'secret services', 'construction worker', 'financial exchange', 'strategy expert', 'firekeeper', 'lawyer', 'antimafia', 'city planning', 'hyperpornographic gallery art', 'ventilation engineer', 'black+goldsmith', 'hypercompetent - metalworker', 'textile engineering', 'logistics', 'market stand keeper - food animals', 'sound design/engineering', 'map maker and chronicler', 'fashion+bars+production analogue', 'banker church mafia', 'stand-up comedian', 'creative director (fashion)', 'corner shop owner', 'aerospace engineering', 'technical illustrator', 'market stand keeper - veggies', 'hypercompetent - woodworker', 'portinai_', 'research marginalia artist', 'cartoon band team', 'independent platform capitalist', 'falsario d’arte', 'cathedral sculptor', 'animator', 'business boy*', 'boss'],
            "vari":['downhill', 'photorealistic drawings', 'baseball', 'paraglides', 'uses elephants', 'embroidery', 'warrior-like', 'flute(s) player', 'terra del fuoco', 'jazz band', 'tennis', 'maths', 'veteran', 'fashion history', 'leather work (for kink initially)', 'has an altar', 'balancestacking', 'cool bicchieri', 'people hoarder', 'game mechanics', 'analog films', 'fanfic author', 'graverobbing', 'schroedingers', 'projection artist', 'game dev (through VR)', 'food and drugs (medical+recreational)', 'ttrpg developer', 'boxe', 'traditional chinese medicine', 'suicidal', 'ancient cuisine', 'anatomy', 'teens who want to become adults', 'reads tarot', 'political terrorist', 'chains', 'records sounds and thoughts', 'bicycle enthusiast', 'structures zine', 'vintage cars', 'experimental music', 'drummer', 'shrooms mommy', 'language', 'knows chinese', 'plunderphonics', 'unicorn', 'big storms', 'butterfly collection', 'tai chi', 'event t-shirts', 'hockey', 'bass', 'snuff films', 'hard disk hoarder', 'designer furniture', 'always has kleenex', 'tapes', 'exorcist', 'astronomy', 'TAS speedrunner', 'judiciary history', 'gunpla', 'drag', 'oversized t-shirts', 'pankratos', 'stick carving', 'folk punk band', 'alberi da frutta', 'sitar', 'has had plastic surgery', 'geology', 'takes good care of their dog', 'military ships', 'ancient instruments', 'topology', 'go', 'planes', 'rollerblade freestyler', 'insect husks collection', 'cooks with and eats insects', 'basketball', 'AI creativity', 'creates lamps', 'pelli di foca', 'naturist', 'martyr', 'incense', 'physical theatre', 'pizza nel forno a legna', 'tanks', 'athletics', 'drones', 'vintage computers', 'mushroom seeker', 'gymnastics', 'ping-pong', 'hunter', 'poet', 'north pole', 'partner dance', 'algae tank', 'has a Folder', 'forgery', 'piano composer', 'exchanges shells with the ocean', 'cuts everyones hair', 'pirate radio', 'started working in proprio early/young', 'trains', 'rakugo', 'dust mandalas', 'starves in nature', 'motorcycle', 'micro-organism colonies', 'recording studio', 'robotics kink', 'guns', 'automated gardening', 'has a child', 'logic', 'scripture-tablet-sword', 'inscribed armor', 'kamikaze', 'nude model', 'ice-skates outside', 'canti gregoriani+', 'strandbeeste', 'bouldering', 'tricycle', 'widow*', 'fighting game e-athlete', 'makes castagne & polenta', 'ceramica nel forno a legna', 'speculative evolution', 'makes paper', 'jazz band', 'tennis', 'maths', 'veteran', 'leather work (for kink initially)', 'balancestacking', 'cool bicchieri', 'has an altar', 'fashion history', 'people hoarder', 'game mechanics']
}

speciali = ['eastern dragon head', 'gorilla suit', 'chimp head', 'expressive', 'mech', 'devil', 'sphynx analogue', 'exoskeletal', 'battle master', 'corner fast food owner', 'materials engineer', 'mecenate', 'waste expert', 'people hoarder', 'game mechanics', 'fanfic author', 'graverobbing', 'schroedingers', 'projection artist', 'game dev (through VR)', 'ttrpg developer', 'traditional chinese medicine', 'suicidal', 'ancient cuisine', 'political terrorist', 'structures zine', 'shrooms mommy', 'plunderphonics', 'snuff films', 'tapes', 'judiciary history', 'stick carving', 'martyr', 'physical theatre', 'has a Folder', 'forgery', 'exchanges shells with the ocean', 'pirate radio', 'rakugo', 'dust mandalas', 'starves in nature', 'micro-organism colonies', 'robotics kink', 'automated gardening', 'has a child', 'scripture-tablet-sword', 'inscribed armor', 'canti gregoriani+', 'strandbeeste', 'dinosaur skeleton', 'person-in-a-vat mech', 'alien', 'centaur cyborg', 'hypercompetent - painter', 'OS developer', 'hobo clown', 'firekeeper', 'hyperpornographic gallery art', 'hypercompetent - metalworker', 'textile engineering', 'market stand keeper - food animals', 'map maker and chronicler', 'fashion+bars+production analogue', 'creative director (fashion)', 'hypercompetent - woodworker', 'research marginalia artist', 'cartoon band team', 'independent platform capitalist', 'falsario d’arte', 'cathedral sculptor', 'fire head']

for i in range(40):
    #1
    merged_tmp = []
    for categoria in categorie.keys():
        merged_tmp+=categorie[categoria]
    
    tratti = [choice(merged_tmp)]
    
    #2
    merged_tmp = []
    if tratto_in_che_categoria(tratti[0])=="vari":
    	for categoria in categorie.keys():
            merged_tmp+=categorie[categoria]
    
    else:
    	for categoria in categorie.keys():
    		if categoria!=tratto_in_che_categoria(tratti[0]):
    			merged_tmp+=categorie[categoria]
    
    tratti.append(choice(merged_tmp))
    
    #3
    merged_tmp = []
    
    if tratto_in_che_categoria(tratti[0])=="vari":
        if tratto_in_che_categoria(tratti[1])=="vari":
        	for categoria in categorie.keys():
        		if categoria!="vari":
        			merged_tmp+=categorie[categoria]
        else:
            for categoria in categorie.keys():
                if categoria!=tratto_in_che_categoria(tratti[1]):
                    merged_tmp+=categorie[categoria]
    			
    else:
    	for categoria in categorie.keys():
    		if categoria!=tratto_in_che_categoria(tratti[0]) and categoria!=tratto_in_che_categoria(tratti[1]):
    			merged_tmp+=categorie[categoria]
    			
    
    if check_match(tratti[0], speciali) and check_match(tratti[1], speciali):
        for tratto in speciali:
            if tratto in merged_tmp:
                merged_tmp.remove(tratto)
    			
    tratti.append(choice(merged_tmp))
    
    
    print(“, ".join(tratti))
